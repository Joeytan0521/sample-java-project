plugins {
    id 'java'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

group = 'com.example'
version = 'V1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.beust:jcommander:1.81'  // JCommander dependency
    implementation 'org.projectlombok:lombok:1.18.26'  // Lombok dependency
    annotationProcessor 'org.projectlombok:lombok:1.18.26'  // Lombok annotation processor
    testImplementation 'junit:junit:4.13.2'
}

test {
    finalizedBy jacocoTestReport  // Ensure the report is generated after tests
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.example.SampleJavaProject'  // Main class to run
        )
    }
    from sourceSets.main.output  // Include compiled classes in the JAR
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Handle duplicate files by excluding duplicates
    archiveBaseName.set('sample-java-project')  // Name of the JAR file
    archiveVersion.set('V1')  // Version of the JAR file
    destinationDirectory.set(file("$buildDir/libs"))  // Output directory for the JAR file
}

jacocoTestReport {
    dependsOn test // Ensure test task runs before generating report
    reports {
        xml.required = true  // Enable XML report
        html.required = true // Enable HTML report
    }
}
